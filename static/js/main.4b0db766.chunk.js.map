{"version":3,"sources":["contexts/ThemeContext.js","components/Navbar.js","components/ThemeSelect.js","contexts/MovieContext.js","components/MovieDetails.js","components/MovieList.js","components/NewMovieForm.js","components/ThemeNav.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","filterTheme","none","blur","grayscale","chooseTheme","value","setState","Provider","this","props","children","Component","Navbar","useContext","className","style","filter","ThemeSelect","useState","themeName","onSubmit","e","preventDefault","onChange","target","idx","selectedIndex","options","innerText","console","log","MovieContext","MovieContextProvider","title","director","year","id","Movies","setMovies","addMovie","uuid","removeMovie","Movie","MovieDetails","movie","onClick","MovieList","movieVar","length","map","key","NewMovieForm","setTitle","setDirector","setYear","type","placeholder","ThemeNav","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b0db766.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  state = {\n    filterTheme: \"none\",\n    none: \"none\",\n    blur: \"blur(10px)\",\n    grayscale: \"grayscale(100%)\"\n  }\n\n  chooseTheme = (value) => {\n    this.setState({ filterTheme: value});\n  }\n\n  render() {\n    return (\n      <ThemeContext.Provider value={{ ...this.state, chooseTheme: this.chooseTheme }}>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default ThemeContextProvider;","import React, { useContext } from 'react';\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst Navbar = () => {\n\n  const { filterTheme } = useContext(ThemeContext);\n  return (\n    <div className=\"navbar\" style={{ filter: filterTheme }}>\n      <h1>Sample List</h1>\n    </div>\n  );\n}\n \nexport default Navbar;","import React, { useContext, useState } from \"react\";\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n  \n\nconst ThemeSelect = () => {\n  const { chooseTheme } = useContext(ThemeContext);\n\n  const [filterTheme] = useState('');\n  let themeName = filterTheme;\n\n  function handleChange(e) {\n    chooseTheme(e.target.value);\n    let idx = e.target.selectedIndex;\n    themeName = e.target.options[idx].innerText;\n    console.log(themeName);\n    return (\n      <div>Dogs and cats</div>\n    )\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  };\n\n    return (\n      <div className=\"theme-form\">\n        <form onSubmit={handleSubmit}>\n          {themeName}\n          <h1>CSS Filters</h1>\n          <h2>\n            Choose from dropdown to explore how different CSS filters affect\n            page elements above.\n          </h2>\n          <br />\n          <select\n            className=\"select-css\"\n            value={filterTheme}\n            onChange={handleChange}\n          >\n            <option value=\"bob\">Choose Filter</option>\n            <option value=\"blur(10px)\">Blur</option>\n            <option value=\"brightness(3)\">Brightness</option>\n            <option value=\"contrast(3)\">Contrast</option>\n            <option value=\"drop-shadow(16px 16px 10px rgba(0,0,0,0.9)\">\n              Drop Shadow\n            </option>\n            <option value=\"grayscale(100%)\">GrayScale</option>\n            <option value=\"invert(100%)\">Invert</option>\n            <option value=\"opacity(20%)\">Opacity</option>\n            <option value=\"sepia(100%)\">Sepia</option>\n            <option value=\"saturate(0%)\">Saturate/Desaturate</option>\n            <option value=\"none\">Clear Filter</option>\n          </select>\n\n        </form>\n      </div>\n    );\n  };\n\n\nexport default ThemeSelect;\n","import React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v1';\n\nexport const MovieContext = createContext();\n\nconst MovieContextProvider = (props) => {\n  const [Movies, setMovies] = useState([\n    { title: \"Citizen Kane\", director: \"Orson Welles\", year: \"1941\", id: 1 },\n    { title: \"The Waterboy\", director: \"Frank Coraci\", year: \"1998\", id: 2 },\n    { title: \"Remains of the Day\", director: \"Frank Coraci\", year: \"1989\", id: 3 },\n\n  ]);\n\n  const addMovie = (title, director, year) => {\n    setMovies([...Movies, {title, director, year, id: uuid()}]);\n  };\n  const removeMovie = (id) => {\n    setMovies(Movies.filter(Movie => Movie.id !== id));\n  }\n\n  return (\n    <MovieContext.Provider value={{ Movies, addMovie, removeMovie }}>\n      {props.children}\n    </MovieContext.Provider>\n  );\n}\n \nexport default MovieContextProvider;","import React, { useContext } from 'react';\nimport { MovieContext } from '../contexts/MovieContext';\n\nconst MovieDetails = ({ movie }) => {\n  const { removeMovie } = useContext(MovieContext);\n  return (\n    <li onClick={() => removeMovie(movie.id)}>\n      <div className=\"title\"><span className='movie-title'>{movie.title}</span> </div>\n      <div className=\"director\">Director: {movie.director}</div>\n      <div className=\"year\">Year: {movie.year}</div>\n    </li>\n  );\n}\n\nexport default MovieDetails;","import React, { useContext } from 'react';\nimport MovieDetails from './MovieDetails';\n\nimport { MovieContext } from '../contexts/MovieContext';\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst MovieList = () => {\n  const { Movies } = useContext(MovieContext);\n  const { filterTheme} = useContext(ThemeContext);\n  let movieVar = Movies.length === 1 ? 'movie' : 'movies';\n  \n  return Movies.length ? (\n    <div className=\"movie-list\" style={{ filter: filterTheme }}>\n\n      <div className=\"subheader\"><p>You have {Movies.length} {movieVar} to watch. Chop-chop!</p></div>\n      <ul>\n        {Movies.map(movie => {\n          return ( <MovieDetails movie={movie} key={movie.id} /> );\n        })}\n      </ul>\n    </div>\n  ) : (\n    <div className=\"empty\">You have no movies to watch. Perhaps try reading?</div>\n  );\n}\n\nexport default MovieList;","import React, { useContext, useState } from \"react\";\n\nimport { MovieContext } from \"../contexts/MovieContext\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst NewMovieForm = () => {\n    const { addMovie } = useContext(MovieContext);\n    const { filterTheme } = useContext(ThemeContext);\n\n    const [title, setTitle] = useState(\"\");\n    const [director, setDirector] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        addMovie(title, director, year);\n        setTitle(\"\");\n        setDirector(\"\");\n        setYear(\"\");\n    };\n\n  return (\n    <div className='movie-form-container'>\n\n      <form className='movie-form' onSubmit={handleSubmit} style={{ filter: filterTheme }}>\n        <input\n          type=\"text\"\n          placeholder=\"Movie Title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Director Name\"\n          value={director}\n          onChange={e => setDirector(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Year\"\n          value={year}\n          onChange={e => setYear(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Add movie\" />\n\n      </form>\n    </div>\n  );\n};\n\nexport default NewMovieForm;","import React, { useContext } from \"react\";\n\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst ThemeNav = () => {\n\n    const { filterTheme } = useContext(ThemeContext);\n\n\n\n    return (\n        <div className='filter-theme'>Current Filter:  <span className='filter-name'> {filterTheme}</span> </div>\n    );\n};\n\nexport default ThemeNav;","import React  from 'react';\n\nimport Navbar from './components/Navbar';\nimport ThemeSelect from './components/ThemeSelect';\nimport MovieList from './components/MovieList';\nimport NewMovieForm from './components/NewMovieForm';\nimport ThemeNav from './components/ThemeNav';\n\nimport MovieContextProvider from './contexts/MovieContext';\nimport ThemeContextProvider from './contexts/ThemeContext';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"main-app\">\n        <ThemeContextProvider>\n            <MovieContextProvider>\n              <Navbar />\n              <MovieList />\n              <NewMovieForm />\n            </MovieContextProvider>\n           < ThemeNav />\n          < ThemeSelect />\n          </ThemeContextProvider>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facemovie/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}